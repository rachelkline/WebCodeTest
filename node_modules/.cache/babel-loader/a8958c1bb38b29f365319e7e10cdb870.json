{"ast":null,"code":"var _jsxFileName = \"/Users/rachelkline/web-code-test/web-code-test/src/TESTStore.js\";\nimport React, { Component } from \"react\";\nimport products from \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductData extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products\n    };\n\n    this.onChange = (index, val) => {\n      this.setState({\n        products: this.state.products.map((product, i) => i === index ? { ...product,\n          count: val\n        } : product)\n      });\n    };\n  }\n\n  render() {\n    console.log(products);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ProductList, {\n        products: this.state.products,\n        onChange: this.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Total, {\n        products: this.state.products\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nconst ProductList = ({\n  products,\n  onChange\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  children: products.map((product, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [product.name, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: product.count,\n      onChange: e => onChange(i, parseInt(e.target.value) || 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, i, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n\n_c = ProductList;\n\nconst Total = ({\n  products\n}) => /*#__PURE__*/_jsxDEV(\"h3\", {\n  children: [\"Price:\", products.reduce((sum, i) => sum += i.count * i.price, 0)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 3\n}, this);\n\n_c2 = Total;\nexport default ProductData;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductList\");\n$RefreshReg$(_c2, \"Total\");","map":{"version":3,"sources":["/Users/rachelkline/web-code-test/web-code-test/src/TESTStore.js"],"names":["React","Component","products","ProductData","state","onChange","index","val","setState","map","product","i","count","render","console","log","ProductList","name","e","parseInt","target","value","Total","reduce","sum","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,IAArB;;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACC,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCG,KADwC,GAChC;AACNF,MAAAA;AADM,KADgC;;AAAA,SAKxCG,QALwC,GAK7B,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzB,WAAKC,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWF,QAAX,CAAoBO,GAApB,CAAwB,CAACC,OAAD,EAAUC,CAAV,KAChCA,CAAC,KAAKL,KAAN,GAAc,EAAE,GAAGI,OAAL;AAAcE,UAAAA,KAAK,EAAEL;AAArB,SAAd,GAA2CG,OADnC;AADE,OAAd;AAKD,KAXuC;AAAA;;AAaxCG,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACF,wBACE;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWF,QAAlC;AAA4C,QAAA,QAAQ,EAAE,KAAKG;AAA3D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWF;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AArBuC;;AAsBzC;;AAED,MAAMc,WAAW,GAAG,CAAC;AAAEd,EAAAA,QAAF;AAAYG,EAAAA;AAAZ,CAAD,kBAClB;AAAA,YACGH,QAAQ,CAACO,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACZ;AAAA,eACGD,OAAO,CAACO,IADX,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEP,OAAO,CAACE,KAFjB;AAGE,MAAA,QAAQ,EAAEM,CAAC,IAAIb,QAAQ,CAACM,CAAD,EAAIQ,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR,IAA4B,CAAhC;AAHzB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAASV,CAAT;AAAA;AAAA;AAAA;AAAA,UADD;AADH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMK,W;;AAeN,MAAMM,KAAK,GAAG,CAAC;AAAEpB,EAAAA;AAAF,CAAD,kBACZ;AAAA,uBAEGA,QAAQ,CAACqB,MAAT,CAAgB,CAACC,GAAD,EAAMb,CAAN,KACfa,GAAG,IAAIb,CAAC,CAACC,KAAF,GAAUD,CAAC,CAACc,KADpB,EAEE,CAFF,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMH,K;AAUN,eAAenB,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport products from \"./\";\n\nclass ProductData extends React.Component {\n  state = {\n    products\n  }\n\n  onChange = (index, val) => {\n    this.setState({\n      products: this.state.products.map((product, i) => (\n        i === index ? { ...product, count: val } : product\n      ))\n    })\n  }\n\n  render() {\n      console.log(products);\n    return (\n      <div>\n        <ProductList products={this.state.products} onChange={this.onChange} />\n        <Total products={this.state.products} />\n      </div>\n    )\n  }\n};\n\nconst ProductList = ({ products, onChange }) => ( \n  <ul>\n    {products.map((product, i) => (\n      <li key={i}>\n        {product.name}\n        <input\n          type=\"text\"\n          value={product.count}\n          onChange={e => onChange(i, parseInt(e.target.value) || 0)}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nconst Total = ({ products }) => (\n  <h3>\n    Price:\n    {products.reduce((sum, i) => (\n      sum += i.count * i.price\n    ), 0)}\n  </h3>\n)\n\n\nexport default ProductData;"]},"metadata":{},"sourceType":"module"}