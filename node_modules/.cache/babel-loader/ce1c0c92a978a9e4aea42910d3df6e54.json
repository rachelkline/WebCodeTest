{"ast":null,"code":"var _jsxFileName = \"/Users/rachelkline/web-code-test/web-code-test/src/utils/GlobalState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/createContext({\n  id: \"\",\n  name: \"\",\n  priority: false\n});\nconst {\n  Provider\n} = TodoContext;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"add\":\n      return [...state, {\n        id: state.length * Math.random(),\n        name: action.name\n      }];\n\n    case \"remove\":\n      return state.filter((_, index) => {\n        return index !== action.index;\n      });\n\n    case \"prioritize\":\n      return state.map((item, index) => {\n        if (index === action.index) {\n          return Object.assign({}, item, {\n            priority: !item.priority\n          });\n        }\n\n        return item;\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction TodoProvider({\n  value = [],\n  ...props\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, []);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: [state, dispatch],\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TodoProvider, \"8pXRrr8ws9JzhvliRQlKIDFcnHU=\");\n\n_c = TodoProvider;\n\nfunction useTodoContext() {\n  _s2();\n\n  return useContext(TodoContext);\n}\n\n_s2(useTodoContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { TodoProvider, useTodoContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["/Users/rachelkline/web-code-test/web-code-test/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","TodoContext","id","name","priority","Provider","reducer","state","action","type","length","Math","random","filter","_","index","map","item","Object","assign","TodoProvider","value","props","dispatch","useTodoContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,CAAC;AAChCI,EAAAA,EAAE,EAAE,EAD4B;AAEhCC,EAAAA,IAAI,EAAE,EAF0B;AAGhCC,EAAAA,QAAQ,EAAE;AAHsB,CAAD,CAAjC;AAKA,MAAM;AAAEC,EAAAA;AAAF,IAAeJ,WAArB;;AAEA,SAASK,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,KAAL;AACE,aAAO,CACL,GAAGF,KADE,EAEL;AACEL,QAAAA,EAAE,EAAEK,KAAK,CAACG,MAAN,GAAeC,IAAI,CAACC,MAAL,EADrB;AAEET,QAAAA,IAAI,EAAEK,MAAM,CAACL;AAFf,OAFK,CAAP;;AAOF,SAAK,QAAL;AACE,aAAOI,KAAK,CAACM,MAAN,CAAa,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAChC,eAAOA,KAAK,KAAKP,MAAM,CAACO,KAAxB;AACD,OAFM,CAAP;;AAGF,SAAK,YAAL;AACE,aAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOF,KAAP,KAAiB;AAChC,YAAIA,KAAK,KAAKP,MAAM,CAACO,KAArB,EAA4B;AAC1B,iBAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwB;AAC7Bb,YAAAA,QAAQ,EAAE,CAACa,IAAI,CAACb;AADa,WAAxB,CAAP;AAGD;;AACD,eAAOa,IAAP;AACD,OAPM,CAAP;;AAQF;AACE,aAAOV,KAAP;AAvBF;AAyBD;;AAED,SAASa,YAAT,CAAsB;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAc,KAAGC;AAAjB,CAAtB,EAAgD;AAAA;;AAC9C,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBxB,UAAU,CAACO,OAAD,EAAU,EAAV,CAApC;AAEA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACC,KAAD,EAAQgB,QAAR,CAAjB;AAAA,OAAwCD;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAJQF,Y;;KAAAA,Y;;AAMT,SAASI,cAAT,GAA0B;AAAA;;AACxB,SAAOxB,UAAU,CAACC,WAAD,CAAjB;AACD;;IAFQuB,c;;AAIT,SAASJ,YAAT,EAAuBI,cAAvB","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\n\nconst TodoContext = createContext({\n  id: \"\",\n  name: \"\",\n  priority: false\n});\nconst { Provider } = TodoContext;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n  case \"add\":\n    return [\n      ...state,\n      {\n        id: state.length * Math.random(),\n        name: action.name\n      }\n    ];\n  case \"remove\":\n    return state.filter((_, index) => {\n      return index !== action.index;\n    });\n  case \"prioritize\":\n    return state.map((item, index) => {\n      if (index === action.index) {\n        return Object.assign({}, item, {\n          priority: !item.priority\n        });\n      }\n      return item;\n    });\n  default:\n    return state;\n  }\n}\n\nfunction TodoProvider({ value = [], ...props }) {\n  const [state, dispatch] = useReducer(reducer, []);\n\n  return <Provider value={[state, dispatch]} {...props} />;\n}\n\nfunction useTodoContext() {\n  return useContext(TodoContext);\n}\n\nexport { TodoProvider, useTodoContext };"]},"metadata":{},"sourceType":"module"}