{"ast":null,"code":"var _jsxFileName = \"/Users/rachelkline/web-code-test/web-code-test/src/TESTStore.js\";\nimport React, { Component } from \"react\";\nimport products from \"./data/stockProducts.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductData extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products\n    };\n\n    this.onChange = (index, val) => {\n      this.setState({\n        products: this.state.products.map((product, i) => i === index ? { ...product,\n          count: val\n        } : product)\n      });\n    };\n  }\n\n  createCart(cartItem) {\n    // const products = this.props.products;\n    const idMatch = products.filter(product => cartItem.key == product.itemNumber);\n    console.log(idMatch); // {idMatch.map((product, i) => (\n    //     <li\n    //     key={i}>\n    //         {product.name}\n    //     </li>\n    // ))}\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"grid border border-gray-200 gap-x-4 rounded shadow p-4\",\n      style: {\n        gridTemplateColumns: \"1fr 10fr 1fr 0fr 1fr 0fr 1fr 0fr\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: idMatch[0].image,\n        className: \"block w-full rounded shadow p-2 bg-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col flex-grow justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-lg\",\n          children: cartItem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: idMatch[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-semibold text-lg text-red-500 flex items-center justify-end\",\n        children: [\"$\", idMatch[0].price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center font-semibold\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"border border-gray-300 rounded w-24 text-lg px-2\",\n          value: cartItem.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center\",\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center font-semibold text-green-500 text-xl\" // name=\"totalValue\"\n        ,\n        type: \"number\" // onClick={this.handleCartTotals}\n        // onChange={this.props.updateCart}\n        // value={this.state.totalValue}\n        ,\n        children: [\"$\", idMatch[0].price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"bg-red-100 hover:bg-red-200 p-1 rounded ml-2\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            className: \"text-red-500 w-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, cartItem.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    var cartEntries = this.props.entries;\n    var cartItems = cartEntries.map(this.createCart);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(ProductItemList, {\n          products: this.state.products,\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-right font-semibold text-lg mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Total, {\n          products: this.state.products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst ProductItemList = ({\n  products,\n  onChange\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: products.map((product, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"grid border border-gray-200 gap-x-4 rounded shadow p-4\",\n    style: {\n      gridTemplateColumns: \"1fr 10fr 1fr 0fr 1fr 0fr 1fr 0fr\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: product.image,\n      className: \"block w-full rounded shadow p-2 bg-white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col flex-grow justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold text-lg\",\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-semibold text-lg text-red-500 flex items-center justify-end\",\n      children: [\"$\", product.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex items-center font-semibold\",\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"border border-gray-300 rounded w-24 text-lg px-2\",\n        value: product.count,\n        onChange: e => onChange(i, parseInt(e.target.value) || 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex items-center\",\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex items-center font-semibold text-green-500 text-xl\" // name=\"totalValue\"\n      ,\n      type: \"number\" // onClick={this.handleCartTotals}\n      // onChange={this.props.updateCart}\n      // value={this.state.totalValue}\n      ,\n      children: [\"$\", product.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-end\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"bg-red-100 hover:bg-red-200 p-1 rounded ml-2\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          className: \"text-red-500 w-6\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this)]\n  }, i, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 13\n  }, this))\n}, void 0, false);\n\n_c = ProductItemList;\n\nconst ProductList = ({\n  products,\n  onChange\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: products.map((product, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"flex flex-col appearance-none border border-gray-200 rounded w-48 p-4 m-2 justify-start items-center hover:bg-gray-100 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: product.image,\n      className: \"block w-full rounded shadow p-2 bg-white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"flex flex-1 items-center font-semibold leading-4 mt-2\",\n      children: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: product.count,\n      onChange: e => onChange(i, parseInt(e.target.value) || 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\" // onClick={props.handleClick}\n      ,\n      className: \"absolute w-8 top-0.5 right-0.5 p-0.5 bg-white shadow rounded-full bg-green-100\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"rgba(16, 185, 129)\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: \"2\",\n          d: \"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this)]\n  }, i, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 13\n  }, this))\n}, void 0, false);\n\n_c2 = ProductList;\n\nconst ProductTotal = ({\n  products\n}) => /*#__PURE__*/_jsxDEV(\"h3\", {\n  children: [\"Total: $\", products.reduce((sum, i) => sum += i.count * i.price, 0)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 190,\n  columnNumber: 5\n}, this);\n\n_c3 = ProductTotal;\n\nconst Total = ({\n  products\n}) => /*#__PURE__*/_jsxDEV(\"h3\", {\n  children: [\"Total: $\", products.reduce((sum, i) => sum += i.count * i.price, 0)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 199,\n  columnNumber: 5\n}, this);\n\n_c4 = Total;\nexport default ProductData;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ProductItemList\");\n$RefreshReg$(_c2, \"ProductList\");\n$RefreshReg$(_c3, \"ProductTotal\");\n$RefreshReg$(_c4, \"Total\");","map":{"version":3,"sources":["/Users/rachelkline/web-code-test/web-code-test/src/TESTStore.js"],"names":["React","Component","products","ProductData","state","onChange","index","val","setState","map","product","i","count","createCart","cartItem","idMatch","filter","key","itemNumber","console","log","gridTemplateColumns","image","name","description","price","render","cartEntries","props","entries","cartItems","ProductItemList","e","parseInt","target","value","ProductList","ProductTotal","reduce","sum","Total"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport products from \"./data/stockProducts.json\";\n\nclass ProductData extends React.Component {\n    state = {\n        products\n    }\n\n    onChange = (index, val) => {\n        this.setState({\n            products: this.state.products.map((product, i) => (\n                i === index ? { ...product, count: val } : product\n            ))\n        })\n    }\n\n    createCart(cartItem) {\n        // const products = this.props.products;\n        const idMatch = products.filter(product => cartItem.key == product.itemNumber);\n        console.log(idMatch);\n\n        // {idMatch.map((product, i) => (\n        //     <li\n        //     key={i}>\n        //         {product.name}\n        //     </li>\n        // ))}\n\n        return <li className=\"grid border border-gray-200 gap-x-4 rounded shadow p-4\" style={{ gridTemplateColumns: \"1fr 10fr 1fr 0fr 1fr 0fr 1fr 0fr\" }}\n            key={cartItem.key}>\n            <img src={idMatch[0].image} className=\"block w-full rounded shadow p-2 bg-white\" />\n            <div className=\"flex flex-col flex-grow justify-center\">\n                <h3 className=\"font-semibold text-lg\">{cartItem.name}</h3>\n                <p>\n                    {idMatch[0].description}\n                </p>\n            </div>\n            <div className=\"font-semibold text-lg text-red-500 flex items-center justify-end\">\n                ${idMatch[0].price}\n            </div>\n            <span className=\"flex items-center font-semibold\">x</span>\n            <div className=\"flex items-center justify-center\">\n                <input\n                    type=\"number\"\n                    className=\"border border-gray-300 rounded w-24 text-lg px-2\"\n                    value={cartItem.count}\n                />\n            </div>\n\n            <span className=\"flex items-center\">=</span>\n            <span\n                className=\"flex items-center font-semibold text-green-500 text-xl\"\n                // name=\"totalValue\"\n                type=\"number\"\n            // onClick={this.handleCartTotals}\n            // onChange={this.props.updateCart}\n            // value={this.state.totalValue}\n            >\n                {/* ${this.state.totalValue} */}\n                {/* ${this.state.newTotal} */}\n                {/* x {this.state.amountValue}) */}\n                {/* <br/> */}\n                {/* ${this.state.totalValue} */}\n                ${idMatch[0].price}\n            </span>\n            {/* <span>${idMatch[0].price}</span> */}\n            <div className=\"flex items-center justify-end\">\n                <button type=\"button\" className=\"bg-red-100 hover:bg-red-200 p-1 rounded ml-2\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"text-red-500 w-6\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                </button>\n            </div>\n        </li>\n    }\n\n\n    render() {\n        var cartEntries = this.props.entries;\n        var cartItems = cartEntries.map(this.createCart);\n        return (\n            <div>\n                {/* <ul className=\"buyList\">\n                    {cartItems}\n                </ul> */}\n                <ul>\n                    <ProductItemList\n                        products={this.state.products}\n                        onChange={this.onChange} />\n                </ul>\n                {/* <h1 className=\"font-semibold text-2xl\">Products</h1>\n                <div className=\"flex border border-gray-200 p-2 rounded mt-2 overflow-x-auto\">\n                    <ProductList \n                    products={this.state.products} \n                    onChange={this.onChange}/>\n                    \n                </div>\n                \n                <div className=\"text-right font-semibold text-lg mt-4\">\n                <Total products={this.state.products} />\n    \n                </div> */}\n                <div className=\"text-right font-semibold text-lg mt-4\">\n                    <Total products={this.state.products} />\n                </div>\n            </div>\n        )\n    }\n};\n\nconst ProductItemList = ({ products, onChange }) => (\n    <>\n        {products.map((product, i) => (\n            <li className=\"grid border border-gray-200 gap-x-4 rounded shadow p-4\" style={{ gridTemplateColumns: \"1fr 10fr 1fr 0fr 1fr 0fr 1fr 0fr\" }}\n                key={i}>\n                <img src={product.image} className=\"block w-full rounded shadow p-2 bg-white\" />\n                <div className=\"flex flex-col flex-grow justify-center\">\n                    <h3 className=\"font-semibold text-lg\">{product.name}</h3>\n                    <p>\n                        {product.description}\n                    </p>\n                </div>\n                <div className=\"font-semibold text-lg text-red-500 flex items-center justify-end\">\n                    ${product.price}\n                </div>\n                <span className=\"flex items-center font-semibold\">x</span>\n                <div className=\"flex items-center justify-center\">\n                    <input\n                        type=\"text\"\n                        className=\"border border-gray-300 rounded w-24 text-lg px-2\"\n                        value={product.count}\n                        onChange={e => onChange(i, parseInt(e.target.value) || 0)}\n                    />\n                </div>\n                <span className=\"flex items-center\">=</span>\n                <span\n                    className=\"flex items-center font-semibold text-green-500 text-xl\"\n                    // name=\"totalValue\"\n                    type=\"number\"\n                // onClick={this.handleCartTotals}\n                // onChange={this.props.updateCart}\n                // value={this.state.totalValue}\n                >\n\n                    ${product.price}\n                </span>\n                <div className=\"flex items-center justify-end\">\n                    <button type=\"button\" className=\"bg-red-100 hover:bg-red-200 p-1 rounded ml-2\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"text-red-500 w-6\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                        </svg>\n                    </button>\n                </div>\n            </li>\n        ))}\n    </>\n)\n\nconst ProductList = ({ products, onChange }) => (\n    <>\n        {products.map((product, i) => (\n            <button\n                className=\"flex flex-col appearance-none border border-gray-200 rounded w-48 p-4 m-2 justify-start items-center hover:bg-gray-100 relative\"\n                key={i}>\n                <img src={product.image} className=\"block w-full rounded shadow p-2 bg-white\" />\n                <h4 className=\"flex flex-1 items-center font-semibold leading-4 mt-2\">{product.name}</h4>\n                <input\n                    type=\"text\"\n                    value={product.count}\n                    onChange={e => onChange(i, parseInt(e.target.value) || 0)}\n                />\n\n                <button type=\"button\"\n                    // onClick={props.handleClick}\n                    className=\"absolute w-8 top-0.5 right-0.5 p-0.5 bg-white shadow rounded-full bg-green-100\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"rgba(16, 185, 129)\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                </button>\n\n            </button>\n        ))}\n    </>\n);\n\n\n\n\nconst ProductTotal = ({ products }) => (\n    <h3>\n        Total: $\n        {products.reduce((sum, i) => (\n            sum += i.count * i.price\n        ), 0)}\n    </h3>\n)\n\nconst Total = ({ products }) => (\n    <h3>\n        Total: $\n        {products.reduce((sum, i) => (\n            sum += i.count * i.price\n        ), 0)}\n    </h3>\n)\n\n\nexport default ProductData;\n"]},"metadata":{},"sourceType":"module"}