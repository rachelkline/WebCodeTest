{"ast":null,"code":"var _jsxFileName = \"/Users/rachelkline/web-code-test/web-code-test/src/Cart.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      amountValue: 1,\n      totalValue: 0,\n      newTotal: ''\n    };\n    this.createCart = this.createCart.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleCartTotals = this.handleCartTotals.bind(this);\n  }\n\n  handleInputChange(e) {\n    let value = e.target.value;\n    const name = e.target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(value);\n  }\n\n  handleCartTotals(e) {\n    let value = e.target.value; // const name = e.target.name;\n\n    console.log(value); // console.log(name);\n    // const cartAmount = this.state.amountValue;\n    // let newTotal = (value * cartAmount)\n    // console.log(newTotal)\n  } // onclick(type) {\n  //     this.setState(prevState => {\n  //         return { amountValue: type == 'add' ? prevState.amountValue + 1 : prevState.amountValue - 1 }\n  //     });\n  // }\n  // handleCartItems(e) {\n  //     //if an item's unique key exists iin the cartItems array, don't render a new item on the buy list\n  //     //instead, update the quantity\n  //     var found = false;\n  //     for(var i=0; i < cartItems.length; i++) {\n  //         if(this.state.cartItems.id == e.currentTarget.id) {\n  //             found = true;\n  //             break;\n  //         }\n  //     }\n  // }\n\n\n  createCart(cartItem) {\n    const products = this.props.products;\n    const idMatch = products.filter(product => cartItem.key == product.itemNumber);\n    console.log(idMatch);\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"grid border border-gray-200 gap-x-4 rounded shadow p-4\",\n      style: {\n        gridTemplateColumns: \"1fr 10fr 1fr 0fr 1fr 0fr 1fr 0fr\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: idMatch[0].image,\n        alt: \"\",\n        className: \"p-2 rounded border border-gray-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col flex-grow justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-lg\",\n          children: cartItem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: idMatch[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-semibold text-lg text-red-500 flex items-center justify-end\",\n        children: [\"$\", idMatch[0].price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center font-semibold\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\" // id=\"amountValue\"\n        // onChange={this.handleInputChange}\n        // value={1}\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amountValue\",\n          className: \"border border-gray-300 rounded w-24 text-lg px-2\",\n          onChange: this.handleInputChange,\n          onClick: this.handleCartTotals,\n          value: this.state.amountValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center\",\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center font-semibold text-green-500 text-xl\",\n        name: \"totalValue\",\n        type: \"number\",\n        onClick: this.handleCartTotals // onChange={this.props.updateCart}\n        ,\n        value: this.state.totalValue,\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"bg-red-100 hover:bg-red-200 p-1 rounded ml-2\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            className: \"text-red-500 w-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, cartItem.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    var cartEntries = this.props.entries;\n    var cartItems = cartEntries.map(this.createCart);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"buyList\",\n      children: cartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/Users/rachelkline/web-code-test/web-code-test/src/Cart.js"],"names":["React","Component","Cart","constructor","props","state","amountValue","totalValue","newTotal","createCart","bind","handleInputChange","handleCartTotals","e","value","target","name","setState","console","log","cartItem","products","idMatch","filter","product","key","itemNumber","gridTemplateColumns","image","description","price","render","cartEntries","entries","cartItems","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Cart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            amountValue: 1,\n            totalValue: 0,\n            newTotal: ''\n        }\n        this.createCart = this.createCart.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleCartTotals = this.handleCartTotals.bind(this);\n    }\n\n    handleInputChange(e) {\n        let value = e.target.value;\n        const name = e.target.name;\n        this.setState({\n            [name]: value,\n        });\n        console.log(value);\n    }\n\n    handleCartTotals(e) {\n        let value = e.target.value;\n        // const name = e.target.name;\n        console.log(value);\n        // console.log(name);\n        // const cartAmount = this.state.amountValue;\n        // let newTotal = (value * cartAmount)\n        // console.log(newTotal)\n    }\n\n\n\n    // onclick(type) {\n    //     this.setState(prevState => {\n    //         return { amountValue: type == 'add' ? prevState.amountValue + 1 : prevState.amountValue - 1 }\n    //     });\n    // }\n\n\n\n    // handleCartItems(e) {\n    //     //if an item's unique key exists iin the cartItems array, don't render a new item on the buy list\n    //     //instead, update the quantity\n    //     var found = false;\n    //     for(var i=0; i < cartItems.length; i++) {\n    //         if(this.state.cartItems.id == e.currentTarget.id) {\n    //             found = true;\n    //             break;\n    //         }\n    //     }\n\n    // }\n\n    createCart(cartItem) {\n        const products = this.props.products;\n        const idMatch = products.filter(product => cartItem.key == product.itemNumber);\n        console.log(idMatch);\n\n\n\n\n        return <li className=\"grid border border-gray-200 gap-x-4 rounded shadow p-4\" style={{ gridTemplateColumns: \"1fr 10fr 1fr 0fr 1fr 0fr 1fr 0fr\" }}\n            key={cartItem.key}>\n            {/* {cartItem.name} */}\n            <img src={idMatch[0].image} alt=\"\" className=\"p-2 rounded border border-gray-200\" />\n            <div className=\"flex flex-col flex-grow justify-center\">\n                <h3 className=\"font-semibold text-lg\">{cartItem.name}</h3>\n                <p>\n                    {idMatch[0].description}\n                </p>\n            </div>\n\n            <div className=\"font-semibold text-lg text-red-500 flex items-center justify-end\">\n                ${idMatch[0].price}\n            </div>\n\n            <span className=\"flex items-center font-semibold\">x</span>\n\n            <div className=\"flex items-center justify-center\"\n            // id=\"amountValue\"\n            // onChange={this.handleInputChange}\n            // value={1}\n            >\n                <input\n                    type=\"number\"\n                    name=\"amountValue\"\n                    className=\"border border-gray-300 rounded w-24 text-lg px-2\"\n                    onChange={this.handleInputChange}\n                    onClick={this.handleCartTotals}\n                    value={this.state.amountValue}\n                />\n\n                {/* <input type='button' onClick={this.onclick.bind(this, 'add')} value='Inc' />\n                {this.state.count}\n                <input type='button' onClick={this.onclick.bind(this, 'sub')} value='Dec' /> */}\n            </div>\n\n            <span className=\"flex items-center\">=</span>\n\n            <span\n                className=\"flex items-center font-semibold text-green-500 text-xl\"\n                name=\"totalValue\"\n                type=\"number\"\n                onClick={this.handleCartTotals}\n            // onChange={this.props.updateCart}\n                value={this.state.totalValue}\n            >$\n                {/* ${this.state.newTotal} */}\n                {/* x {this.state.amountValue}) */}\n                {/* <br/> */}\n                {/* ${this.state.totalValue} */}\n            </span>\n\n            <div className=\"flex items-center justify-end\">\n                <button type=\"button\" className=\"bg-red-100 hover:bg-red-200 p-1 rounded ml-2\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"text-red-500 w-6\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                </button>\n            </div>\n        </li>\n\n    }\n\n    render() {\n        var cartEntries = this.props.entries;\n        var cartItems = cartEntries.map(this.createCart);\n        return (\n            <ul className=\"buyList\">\n                {cartItems}\n            </ul>\n        )\n    }\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}