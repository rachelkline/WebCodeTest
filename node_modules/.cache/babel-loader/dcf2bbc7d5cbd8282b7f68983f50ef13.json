{"ast":null,"code":"var _jsxFileName = \"/Users/rachelkline/web-code-test/web-code-test/src/Cart.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      amountValue: 1,\n      totalValue: \"\"\n    };\n    this.createCart = this.createCart.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(e) {\n    let value = e.target.value;\n    const name = e.target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(value);\n  } // handleCartItems(e) {\n  //     //if an item's unique key exists iin the cartItems array, don't render a new item on the buy list\n  //     //instead, update the quantity\n  //     var found = false;\n  //     for(var i=0; i < cartItems.length; i++) {\n  //         if(this.state.cartItems.id == e.currentTarget.id) {\n  //             found = true;\n  //             break;\n  //         }\n  //     }\n  // }\n\n\n  createCart(cartItem) {\n    const products = this.props.products;\n    const idMatch = products.filter(product => cartItem.key == product.itemNumber);\n    console.log(idMatch);\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"grid border border-gray-200 gap-x-4 rounded shadow p-4\",\n      style: {\n        gridTemplateColumns: \"1fr 10fr 1fr 0fr 1fr 0fr 1fr 0fr\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: idMatch[0].image,\n        alt: \"\",\n        className: \"p-2 rounded border border-gray-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col flex-grow justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-lg\",\n          children: cartItem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: idMatch[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-semibold text-lg text-red-500 flex items-center justify-end\",\n        children: [\"$\", idMatch[0].price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center font-semibold\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        id: \"amountValue\" // onChange={this.handleInputChange}\n        ,\n        value: 1,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\" //   name=\"amountValue\" \n          ,\n          className: \"border border-gray-300 rounded w-24 text-lg px-2\" //   onChange={this.handleInputChange}\n          //   value={this.state.totalValue} \n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center\",\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center font-semibold text-green-500 text-xl\",\n        name: \"totalValue\",\n        type: \"number\" // onChange={this.props.updateCart}\n        // value={idMatch[0].price}\n        ,\n        children: [\"$(\", idMatch[0].price, \" x \", this.state.amountValue, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"bg-red-100 hover:bg-red-200 p-1 rounded ml-2\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            className: \"text-red-500 w-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, cartItem.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    var cartEntries = this.props.entries;\n    var cartItems = cartEntries.map(this.createCart);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"buyList\",\n      children: cartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/Users/rachelkline/web-code-test/web-code-test/src/Cart.js"],"names":["React","Component","Cart","constructor","props","state","amountValue","totalValue","createCart","bind","handleInputChange","e","value","target","name","setState","console","log","cartItem","products","idMatch","filter","product","key","itemNumber","gridTemplateColumns","image","description","price","render","cartEntries","entries","cartItems","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Cart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            amountValue: 1,\n            totalValue: \"\",\n        };\n\n        this.createCart = this.createCart.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(e) {\n        let value = e.target.value;\n        const name = e.target.name;\n        this.setState({\n            [name]: value,\n        });\n        console.log(value);\n    }\n\n\n    // handleCartItems(e) {\n    //     //if an item's unique key exists iin the cartItems array, don't render a new item on the buy list\n    //     //instead, update the quantity\n    //     var found = false;\n    //     for(var i=0; i < cartItems.length; i++) {\n    //         if(this.state.cartItems.id == e.currentTarget.id) {\n    //             found = true;\n    //             break;\n    //         }\n    //     }\n\n    // }\n\n    createCart(cartItem) {\n        const products = this.props.products;\n        const idMatch = products.filter(product => cartItem.key == product.itemNumber);\n        console.log(idMatch);\n\n      \n\n        \n        return <li className=\"grid border border-gray-200 gap-x-4 rounded shadow p-4\" style={{ gridTemplateColumns: \"1fr 10fr 1fr 0fr 1fr 0fr 1fr 0fr\"}}\n        key={cartItem.key}>\n            {/* {cartItem.name} */}\n            <img src={idMatch[0].image} alt=\"\" className=\"p-2 rounded border border-gray-200\" />\n                <div className=\"flex flex-col flex-grow justify-center\">\n                  <h3 className=\"font-semibold text-lg\">{cartItem.name}</h3>\n                  <p>\n                    {idMatch[0].description}\n                  </p>\n                </div>\n        \n                <div className=\"font-semibold text-lg text-red-500 flex items-center justify-end\">\n                  ${idMatch[0].price}\n                </div>\n        \n                <span className=\"flex items-center font-semibold\">x</span>\n        \n                <div className=\"flex items-center justify-center\"\n                    id=\"amountValue\"\n                    // onChange={this.handleInputChange}\n                    value={1}>\n                  <input \n                  type=\"number\" \n                //   name=\"amountValue\" \n                  className=\"border border-gray-300 rounded w-24 text-lg px-2\" \n                //   onChange={this.handleInputChange}\n                //   value={this.state.totalValue} \n                  />\n                </div>\n        \n                <span className=\"flex items-center\">=</span>\n        \n                <span \n                className=\"flex items-center font-semibold text-green-500 text-xl\"\n                name=\"totalValue\"\n                type=\"number\"\n                // onChange={this.props.updateCart}\n                // value={idMatch[0].price}\n                >\n                  $({idMatch[0].price} x {this.state.amountValue})\n                  {/* <br/> */}\n                  {/* ${this.state.totalValue} */}\n                </span>\n        \n                <div className=\"flex items-center justify-end\">\n                  <button type=\"button\" className=\"bg-red-100 hover:bg-red-200 p-1 rounded ml-2\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"text-red-500 w-6\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                  </button>\n                </div>\n            </li>\n        \n    }\n\n    render() {\n        var cartEntries = this.props.entries;\n        var cartItems = cartEntries.map(this.createCart);\n        return(\n            <ul className=\"buyList\">\n                {cartItems}\n            </ul>\n        )\n    }\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}